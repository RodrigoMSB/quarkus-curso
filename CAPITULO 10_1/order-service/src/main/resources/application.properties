# Configuración del servidor
quarkus.http.port=8080

# Nombre de la aplicación
quarkus.application.name=order-service

# Base de datos PostgreSQL
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5433/orders_db
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true

# Redis
quarkus.redis.hosts=redis://localhost:6379
quarkus.redis.timeout=10s

# Health checks
quarkus.smallrye-health.root-path=/health

# OpenAPI
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui

# REST Client - Inventory Service
quarkus.rest-client.inventory-api.url=http://localhost:8081
quarkus.rest-client.inventory-api.scope=jakarta.inject.Singleton

# REST Client - Payment Service
quarkus.rest-client.payment-api.url=http://localhost:8082
quarkus.rest-client.payment-api.scope=jakarta.inject.Singleton

# Fault Tolerance
quarkus.fault-tolerance.enabled=true

# Log level
quarkus.log.level=INFO
quarkus.log.category."pe.banco".level=DEBUG

# ===================================================================
# MICROMETER & PROMETHEUS - Métricas
# ===================================================================
quarkus.micrometer.enabled=true
quarkus.micrometer.registry-enabled-default=true
quarkus.micrometer.binder-enabled-default=true

# Habilitar métricas de Prometheus
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/q/metrics

# Binders de métricas básicos
quarkus.micrometer.binder.jvm=true
quarkus.micrometer.binder.system=true
quarkus.micrometer.binder.vertx.enabled=true
