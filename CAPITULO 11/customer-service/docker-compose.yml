version: '3.8'

services:
  # PostgreSQL Database
  postgres-customer:
    image: postgres:15-alpine
    container_name: customer-postgres
    environment:
      POSTGRES_DB: customerdb
      POSTGRES_USER: customerdb
      POSTGRES_PASSWORD: customerdb123
    ports:
      - "5432:5432"
    volumes:
      - postgres_customer_data:/var/lib/postgresql/data
    networks:
      - creditcore-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U customerdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: customer-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - creditcore-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: customer-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    ports:
      - "8080:8080"
    networks:
      - creditcore-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Customer Service
  customer-service:
    build:
      context: .
      dockerfile: Dockerfile.jvm
    container_name: customer-service
    environment:
      # Database
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres-customer:5432/customerdb
      QUARKUS_DATASOURCE_USERNAME: customerdb
      QUARKUS_DATASOURCE_PASSWORD: customerdb123
      
      # Redis
      QUARKUS_REDIS_HOSTS: redis://redis:6379
      
      # Hibernate
      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: update
      
      # OIDC (cuando Keycloak est√© disponible)
      QUARKUS_OIDC_AUTH_SERVER_URL: http://keycloak:8080/realms/creditcore
      QUARKUS_OIDC_ENABLED: "false" # Deshabilitar hasta tener Keycloak
      
      # Encryption
      APP_ENCRYPTION_KEY_PATH: /keys/tink-keyset.json
      APP_ENCRYPTION_ENABLED: "true"
      
      # Logging
      QUARKUS_LOG_LEVEL: INFO
    ports:
      - "8081:8081"
    volumes:
      - ./keys:/keys
    depends_on:
      postgres-customer:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - creditcore-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/q/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_customer_data:
  redis_data:

networks:
  creditcore-network:
    driver: bridge