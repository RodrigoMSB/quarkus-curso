================================================================================
REPORTE DE PRUEBAS FUNCIONALES
Customer Service - Gesti√≥n de Clientes Empresariales
================================================================================

Fecha de ejecuci√≥n: 2025-10-25 21:40:21
Servicio bajo prueba: http://localhost:8081

Generado por: test-customer-service.sh
Sistema operativo: Darwin

Este reporte contiene los resultados de las pruebas funcionales del
Customer Service, incluyendo:
  - Health checks y endpoints base
  - CRUD de clientes con validaciones
  - Redis Cache (latencias y mejora de rendimiento)
  - B√∫squedas por RUC e industria
  - Validaci√≥n de datos (Bean Validation)
  - OpenAPI y m√©tricas

Tecnolog√≠as probadas:
  ‚úì Panache Active Record (Hibernate ORM)
  ‚úì Google Tink (cifrado de RUC)
  ‚úì Redis Cache (rendimiento)
  ‚úì Bean Validation (validaciones)
  ‚úì Fault Tolerance (Circuit Breaker, Retry)

================================================================================


============================================================================
üöÄ PRUEBAS FUNCIONALES - CUSTOMER SERVICE
============================================================================


PRUEBAS INCLUIDAS:
   1. Health Checks y conectividad
   2. Listar clientes activos (datos pre-cargados)
   3. Crear nuevo cliente con validaciones
   4. Obtener cliente por ID
   5. Redis Cache - Medici√≥n de rendimiento
      - Cache MISS (primera consulta desde PostgreSQL)
      - Cache HIT (consultas subsecuentes desde Redis)
      - Comparaci√≥n de latencias
   6. Actualizar cliente existente
   7. Buscar por RUC (campo cifrado)
   8. Buscar por industria
   9. Validaciones (Bean Validation)
  10. OpenAPI y m√©tricas

‚Ñπ Verificando conectividad con http://localhost:8081...
‚úì Servicio disponible y respondiendo
Servicio verificado: OK
‚Ñπ Obteniendo JWT token de Keycloak...
‚úì JWT token obtenido exitosamente
‚Ñπ Token v√°lido por 5 minutos (300 segundos)
JWT Token: Obtenido correctamente
Token length: 1499 caracteres

============================================================================
üî• PRUEBA 1: HEALTH CHECKS Y CONECTIVIDAD
============================================================================


>>> 1.1 - Health Check b√°sico

‚Ñπ Verificando que el servicio est√© operativo...
Response: Customer Service is UP
HTTP Code: 200
‚úì Servicio operativo: Customer Service is UP
‚úì TEST #1: Health check b√°sico

>>> 1.2 - Health Check detallado (Quarkus)

‚Ñπ Verificando health checks de Quarkus...

Health Check completo:
{
  "status": "UP",
  "checks": [
    {
      "name": "Database connections health check",
      "status": "UP",
      "data": {
        "<default>": "UP"
      }
    },
    {
      "name": "Redis connection health check",
      "status": "UP",
      "data": {
        "default": "PONG"
      }
    }
  ]
}
‚úì TEST #2: Health check Quarkus



============================================================================
üë§ PRUEBA 2: LISTAR CLIENTES ACTIVOS
============================================================================


>>> 2.1 - Obtener todos los clientes activos

‚Ñπ Consultando clientes pre-cargados en la base de datos...

Clientes activos:
[
  {
    "id": 1,
    "rucMasked": "XXXXXXXXX89",
    "legalName": "Tech Innovations S.A.C.",
    "tradeName": "TechInnov",
    "industry": "TECHNOLOGY",
    "foundedDate": "2010-03-15",
    "annualRevenue": 15000000.00,
    "contactEmail": "contacto@techinno.pe",
    "contactPhone": "+51987654321",
    "address": "Av. Innovaci√≥n 123",
    "city": "Lima",
    "status": "ACTIVE",
    "creditScore": 850,
    "riskCategory": "AAA",
    "sunatValidated": true,
    "createdAt": "2025-10-25T21:39:10.577534",
    "updatedAt": "2025-10-25T21:39:10.577534",
    "createdBy": "system",
    "isHighRisk": false,
    "isPremium": true
  },
  {
    "id": 2,
    "rucMasked": "XXXXXXXXX21",
    "legalName": "Comercial del Sur S.A.",
    "tradeName": "ComSur",
    "industry": "RETAIL",
    "foundedDate": "2015-07-20",
‚Ñπ Total de clientes activos: 4
Total: 4 clientes
‚úì Datos pre-cargados disponibles
‚úì TEST #3: Listar clientes activos



============================================================================
üîê PRUEBA 3: CREAR NUEVO CLIENTE
============================================================================


>>> 3.1 - Crear cliente con todos los campos v√°lidos

‚Ñπ Enviando solicitud para crear cliente...
‚Ñπ RUC ser√° cifrado con Google Tink antes de almacenar
‚Ñπ RUC √∫nico generado: 20456789024
Request:
{
  "ruc": "20456789024",
  "legalName": "Tech Innovations Peru S.A.C.",
  "tradeName": "TechPeru",
  "industry": "TECHNOLOGY",
  "foundedDate": "2020-01-15",
  "annualRevenue": 5000000.00,
  "contactEmail": "contacto@techperu.pe",
  "contactPhone": "+51987654999",
  "address": "Av. Tecnolog√≠a 500",
  "city": "Lima"
}

Response:
{
  "id": 6,
  "rucMasked": "XXXXXXXXX24",
  "legalName": "Tech Innovations Peru S.A.C.",
  "tradeName": "TechPeru",
  "industry": "TECHNOLOGY",
  "foundedDate": "2020-01-15",
  "annualRevenue": 5000000.00,
  "contactEmail": "contacto@techperu.pe",
  "contactPhone": "+51987654999",
  "address": "Av. Tecnolog√≠a 500",
  "city": "Lima",
  "status": "ACTIVE",
  "creditScore": null,
  "riskCategory": null,
  "sunatValidated": false,
  "createdAt": "2025-10-25T21:40:26.393866",
  "updatedAt": "2025-10-25T21:40:26.39389",
  "createdBy": "admin-user",
  "isHighRisk": false,
  "isPremium": false
}
‚úì Cliente creado exitosamente - ID: 6
‚Ñπ RUC almacenado cifrado: XXXXXXXXX24
Cliente ID: 6
‚úì TEST #4: Crear cliente nuevo



============================================================================
üîç PRUEBA 4: OBTENER CLIENTE POR ID
============================================================================


>>> 4.1 - Consultar cliente reci√©n creado

‚Ñπ Obteniendo cliente ID: 6

Cliente consultado:
{
  "id": 6,
  "rucMasked": "XXXXXXXXX12",
  "legalName": "Tech Innovations Peru S.A.C.",
  "tradeName": "TechPeru",
  "industry": "TECHNOLOGY",
  "foundedDate": "2020-01-15",
  "annualRevenue": 5000000.00,
  "contactEmail": "contacto@techperu.pe",
  "contactPhone": "+51987654999",
  "address": "Av. Tecnolog√≠a 500",
  "city": "Lima",
  "status": "ACTIVE",
  "creditScore": null,
  "riskCategory": null,
  "sunatValidated": false,
  "createdAt": "2025-10-25T21:21:52.956127",
  "updatedAt": "2025-10-25T21:21:52.956138",
  "createdBy": "admin-user",
  "isHighRisk": false,
  "isPremium": false
}
‚úì TEST #5: Obtener cliente por ID

============================================================================
‚ö° PRUEBA 5: REDIS CACHE - RENDIMIENTO
============================================================================


>>> 5.1 - Primera consulta (Cache MISS)

‚Ñπ Consultando cliente 6 por primera vez...
‚Ñπ Esta consulta ir√° a PostgreSQL (m√°s lenta)...
‚úì Latencia primera consulta: 77ms
Latencia: 77ms (Cache MISS - desde PostgreSQL)
‚úì TEST #6: Primera consulta (Cache MISS)

>>> 5.2 - Verificar Redis (si docker disponible)

‚Ñπ Verificando Redis con docker exec...
‚Ñπ Clave no verificable directamente (puede estar cifrada o con prefix)
Redis Cache: Clave no verificable con docker exec

>>> 5.3 - Segunda consulta (Cache HIT esperado)

‚Ñπ Consultando cliente 6 nuevamente...
‚Ñπ Esta consulta deber√≠a venir desde Redis (m√°s r√°pida)...
‚úì Latencia segunda consulta: 71ms
Latencia: 71ms (Cache HIT - desde Redis)
‚úì ‚ú® ¬°Cache funcionando! Mejora de rendimiento: 8%
‚úì La segunda consulta fue 8% m√°s r√°pida
Mejora de rendimiento: 8%
Comparaci√≥n: 77ms (BD) ‚Üí 71ms (Cache)
‚úì TEST #7: Segunda consulta (Cache HIT)

>>> 5.4 - Tercera consulta (validar cache persistente)

‚Ñπ Consultando una vez m√°s para confirmar cache...
‚Ñπ Latencia tercera consulta: 75ms
Latencia tercera consulta: 75ms
‚Ñπ 
‚Ñπ üìä Comparaci√≥n de las 3 consultas:
‚Ñπ   1¬™ consulta (Cache MISS):        77ms  ‚Üê Desde PostgreSQL
‚Ñπ   2¬™ consulta (Cache HIT):         71ms  ‚Üê Desde Redis
‚Ñπ   3¬™ consulta (Cache persistente): 75ms  ‚Üê Desde Redis

RESUMEN CACHE:
  1¬™: 77ms (MISS - PostgreSQL)
  2¬™: 71ms (HIT - Redis)
  3¬™: 75ms (HIT - Redis)
‚úì 
‚úì ‚úÖ CACHE CONFIRMADO: Promedio 73ms vs 77ms inicial
‚úì    Mejora total: 6%

CONCLUSI√ìN CACHE: Funcionando correctamente (6% mejora)
‚úì TEST #8: Tercera consulta (Cache persistente)



============================================================================
üë§ PRUEBA 6: ACTUALIZAR CLIENTE
============================================================================


>>> 6.1 - Actualizar datos del cliente 6

‚Ñπ Actualizando cliente...
‚Ñπ Cambios: tradeName, annualRevenue, contactEmail, contactPhone, address
Request:
{
      "ruc": "20456789024",
      "legalName": "Tech Innovations Peru S.A.C.",
      "tradeName": "TechPeru Pro",
      "industry": "TECHNOLOGY",
      "foundedDate": "2020-01-15",
      "annualRevenue": 7500000.00,
      "contactEmail": "nuevo@techperu.pe",
      "contactPhone": "+51987654888",
      "address": "Av. Tecnolog√≠a 600",
      "city": "Lima"
    }

Response:
{
  "id": 6,
  "rucMasked": "XXXXXXXXX24",
  "legalName": "Tech Innovations Peru S.A.C.",
  "tradeName": "TechPeru Pro",
  "industry": "TECHNOLOGY",
  "foundedDate": "2020-01-15",
  "annualRevenue": 7500000.00,
  "contactEmail": "nuevo@techperu.pe",
  "contactPhone": "+51987654888",
  "address": "Av. Tecnolog√≠a 600",
  "city": "Lima",
  "status": "ACTIVE",
  "creditScore": null,
  "riskCategory": null,
  "sunatValidated": false,
  "createdAt": "2025-10-25T21:40:26.393866",
  "updatedAt": "2025-10-25T21:40:26.39389",
  "createdBy": "admin-user",
  "isHighRisk": false,
  "isPremium": false
}
‚úì Cliente actualizado correctamente
‚Ñπ ‚úì Cache invalidado autom√°ticamente (@CacheInvalidate)
‚úì TEST #9: Actualizar cliente

============================================================================
üîç PRUEBA 7: BUSCAR CLIENTE POR RUC
============================================================================


>>> 7.1 - Buscar por RUC (campo cifrado)

‚Ñπ Buscando cliente con RUC: 20456789024
‚Ñπ El servicio cifrar√° el RUC antes de buscar en BD...

Cliente encontrado:
{
  "id": 6,
  "rucMasked": "XXXXXXXXX24",
  "legalName": "Tech Innovations Peru S.A.C.",
  "tradeName": "TechPeru Pro",
  "industry": "TECHNOLOGY",
  "foundedDate": "2020-01-15",
  "annualRevenue": 7500000.00,
  "contactEmail": "nuevo@techperu.pe",
  "contactPhone": "+51987654888",
  "address": "Av. Tecnolog√≠a 600",
  "city": "Lima",
  "status": "ACTIVE",
  "creditScore": null,
  "riskCategory": null,
  "sunatValidated": false,
  "createdAt": "2025-10-25T21:40:26.393866",
  "updatedAt": "2025-10-25T21:40:28.993164",
  "createdBy": "admin-user",
  "isHighRisk": false,
‚úì Cliente encontrado por RUC
‚Ñπ RUC enmascarado en respuesta: XXXXXXXXX24
‚úì TEST #10: Buscar cliente por RUC



============================================================================
üîç PRUEBA 8: BUSCAR POR INDUSTRIA
============================================================================


>>> 8.1 - Listar clientes de industria TECHNOLOGY

‚Ñπ Filtrando clientes por sector industrial...

Clientes TECHNOLOGY:
[
  {
    "id": 1,
    "rucMasked": "XXXXXXXXX89",
    "legalName": "Tech Innovations S.A.C.",
    "tradeName": "TechInnov",
    "industry": "TECHNOLOGY",
    "foundedDate": "2010-03-15",
    "annualRevenue": 15000000.00,
    "contactEmail": "contacto@techinno.pe",
    "contactPhone": "+51987654321",
    "address": "Av. Innovaci√≥n 123",
    "city": "Lima",
    "status": "ACTIVE",
    "creditScore": 850,
    "riskCategory": "AAA",
    "sunatValidated": true,
    "createdAt": "2025-10-25T21:39:10.577534",
    "updatedAt": "2025-10-25T21:39:10.577534",
    "createdBy": "system",
    "isHighRisk": false,
    "isPremium": true
  },
  {
    "id": 6,
    "rucMasked": "XXXXXXXXX24",
    "legalName": "Tech Innovations Peru S.A.C.",
    "tradeName": "TechPeru Pro",
    "industry": "TECHNOLOGY",
    "foundedDate": "2020-01-15",
‚Ñπ Total clientes en TECHNOLOGY: 2
Total: 2 clientes
‚úì TEST #11: Listar por industria



============================================================================
‚ùå PRUEBA 9: VALIDACIONES - BEAN VALIDATION
============================================================================


>>> 9.1 - RUC inv√°lido (formato incorrecto)

‚Ñπ Intentando crear cliente con RUC de solo 3 d√≠gitos...

Response (error esperado):
{"title":"Constraint Violation","status":400,"violations":[{"field":"createCustomer.request.ruc","message":"El RUC debe tener exactamente 11 d√≠gitos"}]}
‚úì Validaci√≥n funcion√≥ correctamente (400 Bad Request)
‚Ñπ El servicio rechaz√≥ RUC con formato incorrecto
‚úì TEST #12: Validar RUC formato incorrecto

>>> 9.2 - Email inv√°lido

‚Ñπ Intentando crear cliente con email sin formato correcto...

Response (error esperado):
{"title":"Constraint Violation","status":400,"violations":[{"field":"createCustomer.request.contactEmail","message":"El email no tiene formato v√°lido"}]}
‚úì Validaci√≥n de email funcion√≥ correctamente
‚úì TEST #13: Validar email formato incorrecto



============================================================================
üìä PRUEBA 10: OPENAPI Y M√âTRICAS
============================================================================


>>> 10.1 - OpenAPI Specification

‚Ñπ Consultando especificaci√≥n OpenAPI...

OpenAPI (primeras l√≠neas):
---
openapi: 3.0.3
info:
  title: Customer Service API
  description: Gesti√≥n de clientes empresariales con cifrado y cach√©
  version: 1.0.0
tags:
- name: Customers
  description: Gesti√≥n de clientes empresariales
paths:
  /api/customers:
    get:
      tags:
      - Customers
      summary: Listar clientes activos
‚úì TEST #14: OpenAPI disponible

>>> 10.2 - M√©tricas (Micrometer)

‚Ñπ Consultando m√©tricas de la aplicaci√≥n...

M√©tricas (muestra):
# HELP system_cpu_usage The \"recent cpu usage\" of the system the application is running in
# HELP jvm_threads_started_threads The total number of application threads started in the JVM
‚úì TEST #15: M√©tricas disponibles
‚Ñπ 
‚Ñπ URLs √∫tiles:
‚Ñπ   - Swagger UI: http://localhost:8081/q/swagger-ui
‚Ñπ   - Health:     http://localhost:8081/q/health
‚Ñπ   - Metrics:    http://localhost:8081/q/metrics

URLs del servicio:
  - Swagger UI: http://localhost:8081/q/swagger-ui
  - Health:     http://localhost:8081/q/health
  - Metrics:    http://localhost:8081/q/metrics

============================================================================
üìä RESUMEN DE PRUEBAS
============================================================================


‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                    RESULTADOS FINALES                          ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë Total de pruebas:    15                                        ‚ïë
‚ïë Pruebas exitosas:    15                                        ‚ïë
‚ïë Pruebas fallidas:    0                                         ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

‚úì ¬°TODAS LAS PRUEBAS PASARON EXITOSAMENTE! üöÄ

CONCLUSI√ìN: Customer Service funcionando correctamente.
  ‚úì Panache Active Record operativo
  ‚úì Google Tink cifrando RUCs
  ‚úì Redis Cache mejorando rendimiento
  ‚úì Bean Validation rechazando datos inv√°lidos
  ‚úì OpenAPI y m√©tricas disponibles

================================================================================
FIN DEL REPORTE
================================================================================

Archivo generado: customer-service-report-2025-10-25-214021.txt
Fecha: 2025-10-25 21:40:36

Para m√°s informaci√≥n, consulta:
- README.md: Gu√≠a de usuario
- TEORIA.md: Conceptos t√©cnicos sobre Panache, Tink, Cache, etc.
- instructor.md: Gu√≠a del profesor

Cap√≠tulo 11: Customer Service con Quarkus
Tecnolog√≠as implementadas:
  - Panache Active Record (simplificaci√≥n de JPA)
  - Google Tink (cifrado de datos sensibles)
  - Redis Cache (optimizaci√≥n de rendimiento)
  - Fault Tolerance (Circuit Breaker, Retry, Timeout)
  - Bean Validation (validaciones declarativas)
  - RESTEasy Reactive (endpoints REST)

================================================================================
‚úì Reporte guardado en: customer-service-report-2025-10-25-214021.txt
